// Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RemoteApp.Models
{
    using System;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// A wrapper for account details to be used as a parameter and a response.
    /// </summary>
    public partial class AccountDetailsWrapper : Resource
    {
        /// <summary>
        /// The etag of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// The URL for requesting next page of resources.
        /// </summary>
        [JsonProperty(PropertyName = "nextLink")]
        public string NextLink { get; set; }

        /// <summary>
        /// The account subscriptionId
        /// </summary>
        [JsonProperty(PropertyName = "properties.id")]
        public string AccountDetailsWrapperId { get; set; }

        /// <summary>
        /// Name of the workspace
        /// </summary>
        [JsonProperty(PropertyName = "properties.workspaceName")]
        public string WorkspaceName { get; set; }

        /// <summary>
        /// The maximum number of apps per collection
        /// </summary>
        [JsonProperty(PropertyName = "properties.maxPublishedAppsPerService")]
        public int? MaxPublishedAppsPerService { get; set; }

        /// <summary>
        /// The maximum number of users per collection
        /// </summary>
        [JsonProperty(PropertyName = "properties.maxUsersPerService")]
        public int? MaxUsersPerService { get; set; }

        /// <summary>
        /// Whether or not desktops are enabled on this account
        /// </summary>
        [JsonProperty(PropertyName = "properties.isDesktopEnabled")]
        public bool? IsDesktopEnabled { get; set; }

        /// <summary>
        /// The maximum number of collections
        /// </summary>
        [JsonProperty(PropertyName = "properties.maxServices")]
        public int? MaxServices { get; set; }

        /// <summary>
        /// The URL users can go to to access available apps
        /// </summary>
        [JsonProperty(PropertyName = "properties.rdWebUrl")]
        public string RdWebUrl { get; set; }

        /// <summary>
        /// Admin-defined URL to the privacy statement
        /// </summary>
        [JsonProperty(PropertyName = "properties.privacyUrl")]
        public string PrivacyUrl { get; set; }

        /// <summary>
        /// The home region for the account
        /// </summary>
        [JsonProperty(PropertyName = "properties.location")]
        public string AccountDetailsWrapperLocation { get; set; }

        /// <summary>
        /// Validate the object. Throws ArgumentException or ArgumentNullException if validation fails.
        /// </summary>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
