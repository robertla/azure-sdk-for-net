// Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RemoteApp
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;

    public static partial class TemplateImageOperationsExtensions
    {
            /// <summary>
            /// Gets available template images
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group
            /// </param>
            /// <param name='armNamespace'>
            /// Azure Resource Manager namespace for RemoteApp service environments.
            /// </param>
            /// <param name='apiVersion'>
            /// </param>
            public static IList<TemplateImage> GetTemplateImages(this ITemplateImageOperations operations, string resourceGroupName, string armNamespace, string apiVersion)
            {
                return Task.Factory.StartNew(s => ((ITemplateImageOperations)s).GetTemplateImagesAsync(resourceGroupName, armNamespace, apiVersion), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets available template images
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group
            /// </param>
            /// <param name='armNamespace'>
            /// Azure Resource Manager namespace for RemoteApp service environments.
            /// </param>
            /// <param name='apiVersion'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<TemplateImage>> GetTemplateImagesAsync( this ITemplateImageOperations operations, string resourceGroupName, string armNamespace, string apiVersion, CancellationToken cancellationToken = default(CancellationToken))
            {
                AzureOperationResponse<IList<TemplateImage>> result = await operations.GetTemplateImagesWithHttpMessagesAsync(resourceGroupName, armNamespace, apiVersion, null, cancellationToken).ConfigureAwait(false);
                return result.Body;
            }

    }
}
